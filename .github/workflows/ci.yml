name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: poetry install

      - name: Check code format with Black
        run: poetry run black --check .

      - name: Lint with Flake8
        run: poetry run flake8 .

      - name: Run tests
        run: poetry run pytest --maxfail=1 --disable-warnings -q

      - name: Run tests with coverage
        run: poetry run pytest --cov=src/vault --cov-report=term-missing --maxfail=1 --disable-warnings -q

      - name: Security scan with Bandit
        run: poetry run bandit -r src/vault

  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: poetry install
      - name: Initialize vault for benchmark
        run: |
          printf "ciPass\nciPass\n" | poetry run python -m vault.cli init --path vault.dat
      - name: Run benchmark
        run: poetry run python -m benchmark.cli run
